name: CI
on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]
  release:
    types: [ created ]
jobs:
  build:
    strategy:
      matrix:
        include:
          - { os: ubuntu-18.04, ghc: 8.10.2, cabal: 3.2.0.0, primary: true, latest: true }
          - { os: ubuntu-18.04, ghc: 8.8.4, cabal: 3.2.0.0, primary: false, latest: false }
          - { os: ubuntu-18.04, ghc: 8.6.5, cabal: 3.2.0.0, primary: false, latest: false }
          - { os: macos-10.15, ghc: 8.10.2, cabal: 3.2.0.0, primary: false, latest: true }
          - { os: windows-2019, ghc: 8.8.4, cabal: 3.2.0.0, primary: false, latest: true }
    name: ${{ matrix.os }} ghc-${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    steps:

      - uses: actions/checkout@v2

      - id: setup-haskell
        uses: haskell/actions/setup@v1
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}

      - run: cabal freeze && cat cabal.project.freeze

      - uses: actions/cache@v2
        with:
          path: ${{ steps.setup-haskell.outputs.cabal-store }}
          key: ${{ matrix.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
          restore-keys: ${{ matrix.os }}-${{ matrix.ghc }}-

      - run: cabal build

      - run: cabal test --test-show-details direct

      - run: cabal exec runghc src/util/copy-executable.hs

      - run: strip docker/rattletrap

      - uses: actions/upload-artifact@v2
        with:
          path: docker/rattletrap
          name: rattletrap-${{ matrix.os }}-ghc-${{ matrix.ghc }}-${{ github.sha }}

      - run: cabal sdist --output-dir docker

      - if: matrix.primary
        uses: actions/upload-artifact@v2
        with:
          path: docker/rattletrap-*.tar.gz
          name: rattletrap-${{ github.sha }}.tar.gz

      - run: cabal check

      - if: github.event_name == 'release' && matrix.primary
        run: cabal upload --publish --username '${{ secrets.HACKAGE_USERNAME }}' --password '${{ secrets.HACKAGE_PASSWORD }}' docker/rattletrap-*.tar.gz

      - if: github.event_name == 'release' && matrix.latest
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_content_type: application/octet-stream
          asset_name: rattletrap-${{ github.event.release.tag_name }}-${{ matrix.os }}
          asset_path: docker/rattletrap
          upload_url: ${{ github.event.release.upload_url }}

      - uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - if: matrix.primary
        uses: docker/build-push-action@v2
        with:
          context: docker
          tags: taylorfausak/rattletrap:commit-${{ github.sha }}
          push: true
