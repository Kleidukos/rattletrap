name: release
on:
  release:
    types:
      - created
jobs:

  asset-linux:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: rattletrap-executable-${{ github.sha }}-ubuntu-20.04
          path: output/ubuntu-executable
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_content_type: application/octet-stream
          asset_name: rattletrap-${{ github.event.release.tag_name }}-ubuntu-20.04
          asset_path: output/ubuntu-executable
          upload_url: ${{ github.event.release.upload_url }}

  asset-macos:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: rattletrap-executable-${{ github.sha }}-macos-10.15
          path: output/macos-executable
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_content_type: application/octet-stream
          asset_name: rattletrap-${{ github.event.release.tag_name }}-macos-10.15
          asset_path: output/macos-executable
          upload_url: ${{ github.event.release.upload_url }}

  asset-windows:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: rattletrap-executable-${{ github.sha }}-windows-2019
          path: output/windows-executable
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_content_type: application/octet-stream
          asset_name: rattletrap-${{ github.event.release.tag_name }}-windows-2019.exe
          asset_path: output/windows-executable
          upload_url: ${{ github.event.release.upload_url }}

  asset-tarball:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: rattletrap-package-${{ github.sha }}-ubuntu-20.04.tar.gz
          path: output/rattletrap.tar.gz
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_content_type: application/gzip
          asset_name: rattletrap-${{ github.event.release.tag_name }}.tar.gz
          asset_path: output/rattletrap.tar.gz
          upload_url: ${{ github.event.release.upload_url }}

  asset-schema:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: rattletrap-schema-${{ github.sha }}-ubuntu-20.04.json
          path: output/schema.json
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_content_type: application/json
          asset_name: rattletrap-${{ github.event.release.tag_name }}-schema.json
          asset_path: output/schema.json
          upload_url: ${{ github.event.release.upload_url }}

  docker:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: rattletrap-executable-${{ github.sha }}-ubuntu-20.04
          path: docker/rattletrap
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/build-push-action@v2
        with:
          context: docker
          file: docker/Dockerfile
          tags: taylorfausak/rattletrap:version-${{ github.event.release.tag_name }}
          push: true

  hackage:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: rattletrap-package-${{ github.sha }}-ubuntu-20.04.tar.gz
          path: output/rattletrap-${{ github.event.release.tag_name }}.tar.gz
      - run: cabal upload --publish --username '${{ secrets.HACKAGE_USERNAME }}' --password '${{ secrets.HACKAGE_PASSWORD }}' output/rattletrap-${{ github.event.release.tag_name }}.tar.gz
